# Role: Defines what actions can be performed within a namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: nginx-demo
  name: nginx-role
  labels:
    app: nginx
rules:
# Allow reading pods and services for service discovery
- apiGroups: [""]
  resources: ["pods", "services"]
  verbs: ["get", "list", "watch"]
# Allow reading configmaps and secrets that nginx might need
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list"]
# Allow creating events for logging
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create"]
---
# ClusterRole: Defines cluster-wide permissions (if needed)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nginx-cluster-role
  labels:
    app: nginx
rules:
# Allow reading nodes for monitoring purposes
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list"]

### k8s-manifests/08-role-binding.yaml
---
# RoleBinding: Grants the permissions defined in Role to users/groups/service accounts
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: nginx-role-binding
  namespace: nginx-demo
  labels:
    app: nginx
subjects:
- kind: ServiceAccount
  name: nginx-service-account
  namespace: nginx-demo
roleRef:
  kind: Role
  name: nginx-role
  apiGroup: rbac.authorization.k8s.io
---
# ClusterRoleBinding: Grants cluster-wide permissions
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nginx-cluster-role-binding
  labels:
    app: nginx
subjects:
- kind: ServiceAccount
  name: nginx-service-account
  namespace: nginx-demo
roleRef:
  kind: ClusterRole
  name: nginx-cluster-role
  apiGroup: rbac.authorization.k8s.io